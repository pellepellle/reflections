How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    This allowed me to see only the differences between the versions of code so that I could more easily focus on where a potential error might have occurred. 

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Gives you the ability to compare versions and go back to earlier versions in case there's an issue that cannot be fixed.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Manually saving gives the user control over when they want to commit their changes (i.e logical points) whereas automatically saving ensures that the users does not lose their work by forgetting to commit. 

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    The projects in Git are generally file-based in that a number of files makes up one entity and therefore should be treated as one. Files in Google Docs are not and therefore should be treated separately.  

How can you use the commands git log and git diff to view the history of files?

    git log will show a list of recent commitsl git diff compares to different versions

How might using version control make you more confident to make changes that
could break something?

    You'll know that you can always revert back to previous versions.

Now that you have your workspace set up, what do you want to try using Git for?

    To learn how to version control using Git.


 
